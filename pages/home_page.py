import streamlit as st
import pandas as pd
import plotly.express as px
import os
from datetime import datetime, timedelta

# Fun√ß√£o para carregar dados com pandas
@st.cache_data
def carregar_dados_ufs():
    try:
        return pd.read_parquet('data/dados_dengue_ufs.parquet')
    except Exception as e:
        st.error(f"Erro ao carregar dados de UFs: {e}")
        return pd.DataFrame()

@st.cache_data
def carregar_dados_municipios():
    try:
        return pd.read_parquet('data/dados_dengue_municipios.parquet')
    except Exception as e:
        st.error(f"Erro ao carregar dados de munic√≠pios: {e}")
        return pd.DataFrame()

# Fun√ß√£o para carregar estat√≠sticas gerais
@st.cache_data
def carregar_estatisticas_gerais():
    try:
        # Carregar dados de UFs
        df_ufs = carregar_dados_municipios()
        if df_ufs.empty:
            return pd.DataFrame({
                'total_anos': [12],
                'ano_inicio': [2014],
                'ano_fim': [2025],
                'total_casos': [5000000],
                'total_municipios': [5000] # ADICIONADO: Valor padr√£o para consist√™ncia
            })
        
        # Calcular estat√≠sticas
        stats = {
            'total_anos': len(df_ufs['Ano'].unique()),
            'ano_inicio': df_ufs['Ano'].min(),
            'ano_fim': df_ufs['Ano'].max(),
            'total_casos': df_ufs['Casos'].sum(),
            'total_municipios': df_ufs['Municipio'].nunique()
        }
        
        return pd.DataFrame([stats])
        
    except Exception as e:
        st.error(f"Erro ao calcular estat√≠sticas: {e}")
        return pd.DataFrame({
            'total_anos': [12],
            'ano_inicio': [2014],
            'ano_fim': [2025],
            'total_casos': [5000000],
            'total_municipios': [5000] # ADICIONADO: Valor padr√£o para consist√™ncia
        })

# Header principal
st.markdown("""
<div style="text-align: center; padding: 2rem 0;">
    <h1 style="color: #1f77b4; margin-bottom: 0.5rem;">ü¶ü Dashboard de An√°lise de Dengue</h1>
    <h3 style="color: #666; font-weight: normal;">An√°lise Temporal e Espacial de Casos de Dengue no Brasil</h3>
</div>
""", unsafe_allow_html=True)

# Carregar estat√≠sticas gerais
try:
    stats = carregar_estatisticas_gerais()
    if not stats.empty:
        total_anos = stats['total_anos'].iloc[0]
        ano_inicio = stats['ano_inicio'].iloc[0]
        ano_fim = stats['ano_fim'].iloc[0]
        total_casos = stats['total_casos'].iloc[0]
        total_municipios = stats['total_municipios'].iloc[0]
    else:
        total_anos = 12
        ano_inicio = 2014
        ano_fim = 2025
        total_casos = 5000000
        total_municipios = 5000
except:
    total_anos = 12
    ano_inicio = 2014
    ano_fim = 2025
    total_casos = 5000000
    total_municipios = 5000

# M√©tricas principais
st.markdown("### Vis√£o Geral dos Dados")
col1, col2, col3, col4 = st.columns(4)

with col1:
    st.metric(
        label="Per√≠odo de An√°lise",
        value=f"{ano_inicio} - {ano_fim}",
        delta=f"{total_anos} anos"
    )

with col2:
    st.metric(
        label="Total de Casos",
        value=f"{total_casos:,}".replace(",", "."),
        delta="Registros"
    )

with col3:
    st.metric(
        label="Estados Monitorados",
        value="27",
        delta="Unidades Federativas"
    )

with col4:
    st.metric(
        label="Munic√≠pios",
        value=f"{total_municipios:,}".replace(",", "."),
        delta="Cidades Brasileiras"
    )

# Se√ß√£o de introdu√ß√£o
st.markdown("---")

# Se√ß√£o de funcionalidades
st.markdown("### P√°ginas Dispon√≠veis")

col1, col2 = st.columns(2)

with col1:
    st.markdown("""
    #### üìà An√°lise Temporal
    - Gr√°ficos de linha interativos
    - M√∫ltiplas granularidades: Semanal, Mensal, Anual
    - Filtros por regi√£o: Estados e Munic√≠pios
    - Casos absolutos e Taxa de incid√™ncia
    """)

with col2:
    st.markdown("""
    #### üó∫Ô∏è An√°lise Espacial
    - Mapas interativos por estado e munic√≠pio
    - Visualiza√ß√£o geogr√°fica da distribui√ß√£o de casos
    - Compara√ß√£o regional de incid√™ncia
    """)


# Se√ß√£o de informa√ß√µes t√©cnicas
st.markdown("---")
st.markdown("### Informa√ß√µes Adicionais")

col1, col2 = st.columns(2)

with col1:
    st.markdown("""
    #### üìä Fonte dos Dados
    - **DATASUS**
    - **Per√≠odo**: 2014 a 2025
    - **Cobertura**: Todos os estados brasileiros
    """)

with col2:
    st.markdown("""
    #### üõ†Ô∏è Tecnologias Utilizadas
    - **Streamlit**: Interface web interativa
    - **Plotly**: Gr√°ficos e visualiza√ß√µes
    - **Pandas**: Manipula√ß√£o e processamento de dados
    - **Parquet**: Armazenamento eficiente de dados
    - **GeoJSON**: Dados geogr√°ficos
    """)

# Footer
st.markdown("---")



